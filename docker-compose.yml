version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  symptom-checker-api:
    build: .
    ports:
      - "5000:5000"
    environment:
      - REDIS_URL=redis://redis:6379
      - USE_GPU=false  # Set to true if GPU is available
      - LOG_LEVEL=INFO
      - API_KEY=your-production-api-key
      - JWT_SECRET=your-production-jwt-secret
      - ALLOWED_CORS_ORIGINS=http://localhost:3000,https://yourdomain.com
      - RATE_LIMIT=10/minute
      - MODEL_CACHE_SIZE=1000
      - RESPONSE_CACHE_TTL=3600
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./models_cache:/app/models_cache
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - symptom-checker-api
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data: 